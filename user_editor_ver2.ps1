function print_title {
    # Define the function that prints the title screen
    Write-Host @"
888b.                                          8      
8  .8 .d88b .d88 d88b d88b 8   8 8d8b .d88b .d88      
8wwK' 8.dP' 8  8 `Yb. `Yb. 8b d8 8P   8.dP' 8  8      
8  Yb `Y88P `Y88 Y88P Y88P `Y8P8 8    `Y88P `Y88      
                                                      
8    8                    8888    8 w  w              
8    8 d88b .d88b 8d8b    8www .d88 w w8ww .d8b. 8d8b 
8b..d8 `Yb. 8.dP' 8P      8    8  8 8  8   8' .8 8P   
`Y88P' Y88P `Y88P 8       8888 `Y88 8  Y8P `Y8P' 8


"@
}

function leaver{ #define the function for processing a leaver
	    $fname = Read-Host "Please enter the first name of the leaver"
        $lname = Read-Host "Please enter the last name of the leaver"
		$dist_name = $fname + " " + $lname
        $username = $fname + "." + $lname
		$ext = "_"
		$officephone = "_"
		$dept = (Get-ADUser -Identity $username -Properties Department).Department
		#Check if the user is an advised user and set their domain accordingly
		if($dept -eq "Advised") {
			$emailDomain = "@reassured-advice.co.uk"
			} else {
			$emailDomain = "@reassured.co.uk"
			}
		$Email = $username+$emailDomain
        $Description = Read-Host "What is the Ticket Ref?"
        $ouPath = "OU=M365 Synced Leavers,OU=00 Leavers,OU=Reassured,DC=re-assured,DC=net"

        # Get the groups the user is a member of
        $userGroups = Get-ADUser -Identity $username -Properties MemberOf | Select-Object -ExpandProperty MemberOf

        # Define the group to keep
        $groupToKeep = "Domain Users"

        # Remove the user from each group, except for the Domain Users group
        write-host "Removing Groups..."
        foreach ($group in $userGroups) {
            if ($group -ne $groupToKeep) {
                Remove-ADGroupMember -Identity $group -Members $username -Confirm:$false
            }
        }
        write-host "Disabling account..."
        write-host "Moving to M365 Synced Leavers..."
        #Disable the account, set the ITSD tag as the description and move the leaver into the M365 Sycned Leavers OU. Also remove the phone and ext numbers.
		set-ADUser -Identity $username -Replace @{'ipPhone'=$ext}
        Set-ADUser -Identity $username -Enabled $False -Description $Description -officephone $officephone -PassThru | Move-ADObject -TargetPath $ouPath
		
		#Set the Leaver's GAL status (Credit to Rob Browning for this part.)
		write-host "Hiding user from the GAL..."
		
         Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn

         Set-RemoteMailbox -Identity $Email -HiddenFromAddressListsEnabled $True
         
		 write-host "Completed."
		 start-sleep -seconds 3 #hold the screen for a few seconds so the user can see it completed
}

function new_starter{ #define the function for processing new starters
	#Create the user's login and display name
    $fname = Read-Host "Please enter the first name of the new user"
    $lname = Read-Host "Please enter the last name of the new user"
    $name = $($fname + " " + $lname)
    $login = $($fname + "." + $lname).ToLower()

    #Check if the user already exists
    try {
        $existingUser = Get-ADUser -Identity $login -ErrorAction Stop
        Write-Host "User $login already exists. Please enter a unique username."
    } catch {
        if ($_.Exception -like "*Cannot find an object with identity:*") {
            Write-Host "User $login does not exist. Proceeding with user creation..."
          
            

	#set the users password
	$pwd = Read-Host "Please enter the password for the new user" -AsSecureString

	#Set the department
	$dept = Read-Host "Please enter the department for the user"

	#Set the user's job title
	$jobtitle = read-host "Please enter the user's job title"

	#set the description
	$description = Read-Host "Please enter the ITSD reference number"

	#set the office location
	$office = read-host "Please enter the user's office location"

	#Set the Object path and groups depending on user's job title and department
	If ($Dept -match "Marketing") {
		$ouPath = "OU=Marketing Synced,OU=Users,OU=$dept,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Internet_Marketing","SG_Enable_Azure_Password_Writeback","SG_WebAccess_GoogleDrive","SG_WebAccess_Slack","SG_WebAccess_SocialMedia","SG_WebAccess_VideoStream","SG_WebAccess_WebEmail","SG_ZPA_Marketing_User","Share_PublicFolder_RL")
	}
	Elseif ($jobtitle -match "Administrator") {
		$ouPath = "OU=Users,OU=Admin,OU=Client Services,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Client Servicing","Admin Dept","consent","Customer Services","New Pack","Reassured - Vouchers","Share_PublicFolder_RL","Share_RA_Reports","Share_Sales_RA","Trust Documents Perchance")
	}
	Elseif ($jobtitle -match "Aftersales") {
		$ouPath = "OU=Users,OU=Customer Services,OU=Client Services,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Client Servicing","Aftersales","consent","Customer Services","DL_Mig_W1_Standard-11877340987","SG_COOP_SSH_KEYS","Share_PublicFolder_RL","Share_RA_Reports","Share_Sales_RA","Start Date")
	}
	Elseif ($jobtitle -match "Processing") {
		$ouPath = "OU=Users,OU=Customer Services,OU=Client Services,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Aftersales","Client Servicing","Customer Services","Share_PublicFolder_RL","Share_Sales_RA","Team Pro")
	}
	Elseif ($jobtitle -match "Impaired") {
		$ouPath = "OU=Users,OU=Impaired Life,OU=Client Services,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Client Servicing","Impaired Life")
	}
	Elseif ($jobtitle -match "Retention") {
		$ouPath = "OU=Users,OU=Retention,OU=Client Services,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Client Servicing","Retention","Share_RA_Reports","Share_Sales_RA")
	}
	Elseif ($Dept -match "Corporate Strategy") {
		$ouPath = "OU=Users,OU=Business Relations,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Buy Now Support-1-1374412779","Internet_Managers","IT Team","PO Activity Reports-1874496526","PO Emergency","PO Intraday Report-1-726138860","PO Weekly Report-11457632048","RBAC_Team_CorporateStrategy","SG_Access_SFTP_Sunlife","SG_Access_Slack","SG_COOP_SSH_KEYS","SG_ZPA_Tier2","Share_IT_RA","Share_Managers_RL","Share_PublicFolder_RL","Sunlife Activity Report-1807188664")
	}
	Elseif ($jobtitle -match "Talent Acquisition") {
		$ouPath = "OU=Users,OU=Recruitment,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Candidates","Internet_Managers","new starters","Recruitment Bookers","Recruitment Team","SG_SmartRecruiters","SG_ZPA_Tier2","Share_Recruitment","Share_Sales_RA","Team People")
	}
	Elseif ($jobtitle -match "People") {
		$ouPath = "OU=Users,OU=HR,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Internet_Managers","Share_HR_PensionForms","share_HR_RA","Team People")
	}
	Elseif ($jobtitle -match "Facilities") {
		$ouPath = "OU=Facilities,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Boardroom Bookers","EXSG-HQB-RBM","File_Facilities_Folder","Internet_Managers","RBAC_Role_Facilities_Assistant","RBAC_Team_Facilities","SG_Access_JIRA","SG_ZPA_Tier4","Share_PublicFolder_RL","Team People","Training Room Bookers")
	}
	Elseif ($jobtitle -match "Quality Assurance|QA") {
		$ouPath = "OU=Users,OU=Compliance,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Compliance","Compliance Auditors","Share_CallRecordings","Share_Compliance_RA","Share_PublicFolder_RL","Share_Sales_RA")
	}
	Elseif ($jobtitle -match "Complaints|Remediation") {
		$oupath = "OU=Users,OU=Compliance,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Complaints","Compliance","MLRO-11222384013","Remove Me","Share_CallRecordings","Share_Compliance_RA","Share_PublicFolder_RL","Share_RA_Reports","Share_Sales_RA")
	}
	Elseif ($Dept -match "Directors|Board|Executive") {
		$ouPath = "OU=Directors,OU=Management,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","File_Board","Internet_Directors","SG_Lic_AdobeCreativeCloud","SG_WebAccess_FileTransfers","SG_ZPA_Tier1","Share_Managers_RL")
	}
	Elseif ($jobtitle -match "Learning and Development") {
		$ouPath = "OU=Users,OU=Training,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","File_TrainingPDrive_RW","Internet_Managers","new starters","Share_Managers_RL","Share_PublicFolder_RL","Share_Sales_RA","Team People","Training Department")
	}
	Elseif ($jobtitle -match "Service Desk|Support Engineer") {
		$ouPath = "OU=Users,OU=IT,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Chrome_EnableIncognito","Domain Power Users","Internet_TechnicalTeam","IT Admins","IT Bookers","IT Room Bookers-11288781860","IT Support","IT Team","IT Team1","RBAC_Dept_IT","$DA2100-VVKN8UV626E6","RBAC_Role_ServiceDesk_L1","RBAC_Team_ServiceDesk","RDSTest","Service Desk","ServiceDesk_Team","SG_Access_JIRA","SG_WebAccess_FileTransfers","SG_ZPA_Tier3","Share_CallRecordings","Share_IT_RA","Share_PublicFolder_RL","Share_Sales_RA","Support2","Technical_Team")
	}
	Elseif ($jobtitle -match "Business Analyst") {
		$ouPath = "OU=Users,OU=IT,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Domain Power Users","Internet_TechnicalTeam","IT Analysts","IT Bookers","IT Room Bookers-11288781860","IT Team","IT Team1","RBAC_Dept_IT","RBAC_Grant_UAT_CRM_Access","$DA2100-VVKN8UV626E6","RBAC_Role_Change_BusinessAnalyst","RBAC_Team_Change","RBAC_Team_Change_BA","RDSTest","SG_Access_JIRA","SG_Access_Slack","SG_Access_Slack","SG_ZPA_Tier3","Share_IT_RA")
	}
	Elseif ($jobtitle -match "Systems Tester|Automation Tester") {
		$ouPath = "OU=Users,OU=IT,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Chrome_EnableIncognito","ChromeGPO_Exclude","Internet_TechnicalTeam","IT Bookers","IT QA Team","IT Room Bookers-11288781860","IT Team","IT Team1","IT Testers","RBAC_Dept_IT","$DA2100-VVKN8UV626E6","RBAC_Role_Development_Tester","RBAC_Team_Development","RDS_Users_Dev","SG_Access_JIRA","SG_ZPA_Tier3","Share_IT_RA")
	}
	Elseif ($jobtitle -match "Developer|Software Development|Software Engineer|Software Architect") {
		$ouPath = "OU=Users,OU=IT,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Chrome_EnableIncognito","Internet_TechnicalTeam","IT Bookers","IT Developers","IT Room Bookers-11288781860","IT Team","IT Team1","RBAC_Dept_IT","RBAC_Grant_NewRelic_Access","$DA2100-VVKN8UV626E6","RBAC_Role_Development_Developer","RBAC_Team_Development","RDS_Users_Dev","RDSTest","SG_Access_JIRA","SG_Access_Slack","SG_IT_DEV","SG_ZPA_Tier3","Share_IT_RA")
	}
	Elseif ($jobtitle -match "Data") {
		$ouPath = "OU=Users,OU=IT,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","File_DataLake_FileDrop","Internet_TechnicalTeam","IT Bookers","IT Room Bookers-11288781860","IT Team","IT Team1","PO Emergency","PO Intraday Report-1-726138860","PO Weekly Report-11457632048","RBAC_Dept_IT","$5B2100-9S7DI5GL42A5","$DA2100-VVKN8UV626E6","RBAC_Role_Data_Scientist","RBAC_Team_Data","SG_FW_UKF_Access","SG_Lic_Power_Automate_Free","SG_ZPA_Tier5","Share_IT_RA","Share_Managers_RL","Share_PublicFolder_RL")
	} 
	Elseif ($Dept -match "Finance") {
		$ouPath = "OU=Users,OU=Finance,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","File_Funeral Plans","File_Openwork","Internet_Managers","Payroll","RBAC_Dept_Finance","Risk Report","Sage_Users","SG_Access_JIRA","SG_Lic_AdobeCreativeCloud","SG_WebAccess_FileTransfers","SG_ZPA_Tier5","Share_Finance_RA","Share_Managers_RH","Share_Managers_RL","Share_PublicFolder_RH","Share_PublicFolder_RL","Share_RA_Reports","Share_Sales_RA","WG_SSH_Access")
	} 
	Elseif ($Dept -match "Sales") {
		$ouPath = "OU=Users,OU=Sales,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users")
	}
	Elseif ($Dept -match "Advised") {
		$ouPath = "OU=Users,OU=$Dept,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users","Reassured Advice-1-1459850644")
	}
	Else {
		$ouPath = "OU=Users,OU=$Dept,OU=Reassured,DC=re-assured,DC=net"
		$Groups = @("SG_OneDrive_Users","SG_Access_ZPA","SG_Lic_E3_365apps_Enterprise","SG_Lic_E3_ExchangeOnline","SG_Lic_E3_EMS","SG_SP_Connect_Visitors","SG_Avaya_Users")
	}
	#set the users dial code, which will be used to prompt which ddi they should have
	$bas_ddi_array = @('01256236250', '01256236251', '01256236252', '01256236253', '01256236254', '01256236257', '01256236258', '01256236259','01256236260', '01256236261', '01256236262', '01256236263', '01256236264','01256236265', '01256236266', '01256236267', '01256236268', '01256236269','01256581009', '01256581145', '01256581146', '01256581147', '01256581148','01256581149', '01256581240', '01256581241', '01256581242', '01256581243','01256581244', '01256581245', '01256581246', '01256581247', '01256581248','01256581249', '01256581250', '01256581251', '01256581252', '01256581253','01256581254','01256581828', '01256581829','01256581830', '01256581831', '01256581832', '01256581833', '01256581834','01256581835', '01256581836', '01256581837', '01256581856', '01256581857','01256581858', '01256581859', '01256581860', '01256581861', '01256581862','01256581863', '01256581864', '01256581865', '01256581866', '01256581867','01256581868', '01256581869', '01256581870', '01256581891', '01256581892','01256581893', '01256581894', '01256581895', '01256581896', '01256581897','01256581898', '01256581899','01256581900','01256581912','01256581913','01256581914','01256581915', '01256581916', '01256581917', '01256581918','01256581919', '01256581920', '01256581921', '01256581922', '01256581923','01256581924', '01256581925', '01256581926', '01256581927', '01256581928','01256581929', '01256581930', '01256581931', '01256581932', '01256581933','01256581934', '01256581935', '01256581936', '01256581937', '01256581938','01256581939', '01256581940', '01256581941', '01256581942', '01256581943','01256581944', '01256581945', '01256581946', '01256581947', '01256581948','01256581949', '01256581950', '01256581951', '01256581952', '01256581953','01256581954', '01256581955', '01256581956', '01256581957', '01256581958','01256581959', '01256581960', '01256581961', '01256581962', '01256581963','01256581964', '01256581965', '01256581966', '01256581967', '01256581968','01256581969', '01256581970', '01256581971', '01256581972', '01256581973','01256581974', '01256581975', '01256581976', '01256581977', '01256581978','01256581979', '01256581980', '01256581981', '01256585810', '01256585811','01256585812', '01256585813', '01256585814', '01256585815', '01256585816','01256585817', '01256585818', '01256585819', '01256585820', '01256585821','01256585822', '01256585823', '01256585824', '01256585825', '01256585826','01256585827', '01256585828', '01256585829', '01256585830', '01256585831','01256585832', '01256585833', '01256585834', '01256585835', '01256585836','01256585837', '01256585838', '01256585839', '01256585840', '01256585841','01256585842', '01256585843', '01256585844', '01256585845', '01256585846','01256585847', '01256585848', '01256585849', '01256585850', '01256585851','01256585852', '01256585853', '01256585854', '01256585855', '01256585856','01256585857', '01256585858', '01256585859', '01256585860', '01256585861','01256585862', '01256585863', '01256585864', '01256585865', '01256585866','01256585867', '01256585868', '01256585869', '01256585870', '01256585871','01256585872', '01256585873', '01256585874', '01256585875', '01256585876','01256585877', '01256585878', '01256585879', '01256585880', '01256585881','01256585882', '01256585883', '01256585884', '01256585885', '01256585886','01256585887', '01256585888', '01256585889', '01256585890', '01256585891','01256585892', '01256585893', '01256585894', '01256585895', '01256585896','01256585897', '01256585898', '01256585900', '01256585901','01256585902', '01256585903', '01256585904', '01256585905', '01256585906','01256585907', '01256585908', '01256585909', '01256591830', '01256591831','01256591832', '01256591833', '01256591834', '01256591835', '01256591836','01256591837', '01256591838', '01256591839', '01256591840', '01256591841','01256591842','01256591843', '01256591844', '01256591845', '01256591846', '01256591847','01256591848', '01256591849', '01256591850', '01256591851', '01256591852','01256591853', '01256591854', '01256591855', '01256591856', '01256591857','01256591858', '01256591859', '01256591860', '01256591861', '01256591862','01256591863', '01256591864', '01256591865', '01256591866', '01256591867','01256591868', '01256591869', '01256591870', '01256591871', '01256591872','01256591873', '01256591874', '01256591875', '01256591876', '01256591877','01256591878', '01256591879', '01256591880', '01256591881', '01256591882','01256591883', '01256591884', '01256591885', '01256591886', '01256591887','01256591888', '01256591889', '01256591890', '01256591891', '01256591892','01256591893', '01256591894', '01256591895', '01256591896', '01256591897','01256591898', '01256591899', '01256591900', '01256591901', '01256591902','01256591903', '01256591904', '01256591905', '01256591906', '01256591907','01256591908', '01256591909', '01256591910', '01256591911', '01256591912','01256591913', '01256591914', '01256591915', '01256591916', '01256591917','01256591918', '01256591919', '01256591920', '01256591921', '01256591922','01256591923', '01256591924', '01256591925', '01256591926', '01256591927','01256591928', '01256591929', '01256591930', '01256591931', '01256591932','01256591933', '01256591934', '01256591935', '01256591936', '01256591937','01256591938', '01256591939', '01256591940', '01256591941', '01256591942','01256591943', '01256591944', '01256591945','01256591946', '01256591947', '01256591948', '01256591949', '01256591950','01256591951', '01256591952', '01256591953', '01256591954', '01256591955','01256591956', '01256591957', '01256591958', '01256591959', '01256591960','01256591961', '01256591962', '01256591963', '01256591964', '01256591965','01256591966', '01256591967', '01256591968', '01256591969', '01256591970','01256591971', '01256591972', '01256591973', '01256591974', '01256591975','01256591976', '01256591977', '01256591978', '01256591979', '01256595500','01256595501', '01256595502', '01256595503', '01256595504', '01256595505','01256595506', '01256595507', '01256595508', '01256595509', '01256595510','01256595511', '01256595512', '01256595513', '01256595514', '01256595515','01256595516', '01256595517', '01256595518', '01256595519', '01256595520','01256595521', '01256595522', '01256595523', '01256595524', '01256595525','01256595526', '01256595527', '01256595528', '01256595529', '01256595530','01256595531', '01256595532', '01256595533', '01256595534', '01256595535','01256595536', '01256595537', '01256595538', '01256595539', '01256595540','01256595541', '01256595542', '01256595543', '01256595544', '01256595545','01256595546', '01256595547', '01256595548', '01256595549', '01256595550','01256595551', '01256595552', '01256595553', '01256595554', '01256595555','01256595556', '01256595557', '01256595558', '01256595559', '01256595560','01256595561', '01256595562', '01256595563', '01256595564', '01256595565','01256595566', '01256595567', '01256595568', '01256595569', '01256595570','01256595571', '01256595572', '01256595573', '01256595574', '01256595575', '01256595576', '01256595577', '01256595578', '01256595579','01256595580', '01256595581', '01256595582', '01256595583', '01256595584','01256595585', '01256595586', '01256595587', '01256595588', '01256595589','01256595590', '01256595591', '01256595592', '01256595593', '01256595594','01256595595', '01256595596', '01256595597', '01256595598', '01256595599','01256595600', '01256595601', '01256595602', '01256595603', '01256595604','01256595605', '01256595606', '01256595607', '01256595608', '01256595609','01256595610', '01256595611', '01256595612', '01256595613', '01256595614','01256595615', '01256595616', '01256595617', '01256595618', '01256595619','01256595620', '01256595621', '01256595622', '01256595623', '01256595624','01256595625', '01256595626', '01256595627', '01256595628', '01256595629','01256595630', '01256595631', '01256595632', '01256595633', '01256595634','01256595635', '01256595636', '01256595637', '01256595638', '01256595639','01256595640', '01256595641', '01256595642', '01256595643', '01256595644','01256595645', '01256595646', '01256595647', '01256595648', '01256595649','01256595650', '01256595651', '01256595652', '01256595653', '01256595654','01256595655', '01256595656', '01256595657', '01256595658', '01256595659','01256595660', '01256595661', '01256595662', '01256595663', '01256595664','01256595665', '01256595666', '01256595667', '01256595668', '01256595669','01256595670', '01256595671', '01256595672', '01256595673', '01256595674','01256595675', '01256595676', '01256595677', '01256595678', '01256595679','01256595680', '01256595681', '01256595682', '01256595683','01256595684', '01256595685', '01256595686', '01256595687', '01256595688','01256595689', '01256595690', '01256595691', '01256595692', '01256595693','01256595694', '01256595695', '01256595696', '01256595697', '01256595698','01256595699', '01256595700', '01256595701', '01256595702', '01256595703','01256595704', '01256595705', '01256595706', '01256595707', '01256595708','01256595709', '01256595710', '01256595711', '01256595712', '01256595713','01256595714', '01256595715', '01256595716', '01256595717', '01256595718','01256595719', '01256595720', '01256595721', '01256595722', '01256595723','01256595724', '01256595725', '01256595726', '01256595727', '01256595728','01256595729', '01256595730', '01256595731', '01256595732', '01256595733','01256595734', '01256595735', '01256595736', '01256595737', '01256595738','01256595739', '01256595740', '01256595741', '01256595742', '01256595743','01256595744', '01256595745', '01256595746', '01256595747', '01256595748','01256595749', '01256595750', '01256595751', '01256595752', '01256595753','01256595754', '01256595755', '01256595756', '01256595757', '01256595758','01256595759', '01256595760', '01256595761', '01256595762', '01256595763','01256595764', '01256595765', '01256595766', '01256595767', '01256595768','01256595769', '01256595770', '01256595771', '01256595772', '01256595773','01256595774', '01256595775', '01256595776', '01256595777', '01256595778','01256595779', '01256595780', '01256595781', '01256595782', '01256595783',"01256595784","01256595785","01256595786","01256595787","01256595788","01256595789","01256595790","01256595791","01256595792","01256595793","01256595794","01256595795","01256595796","01256595797","01256595798","01256595799","01256595800","01256595801","01256595802","01256595803","01256595804","01256595805","01256595806","01256595807","01256595808","01256595809","01256595810","01256595811","01256595812","01256595813","01256595814","01256595815","01256595816","01256595817","01256595818","01256595819","01256595820","01256595821","01256595822","01256595823","01256595824","01256595825","01256595826","01256595827","01256595828","01256595829","01256595830","01256595831","01256595832","01256595833","01256595834","01256595835","01256595836","01256595837","01256595838","01256595839","01256595840","01256595841","01256595842","01256595843","01256595844","01256595845","01256595846","01256595847","01256595848","01256595849","01256595850","01256595851","01256595852","01256595853","01256595854","01256595855","01256595856","01256595857","01256595858","01256595859","01256595860","01256595861","01256595862","01256595863","01256595864","01256595865","01256595866","01256595867","01256595868","01256595869","01256595870","01256595871","01256595872","01256595873","01256595874","01256595875","01256595876","01256595877","01256595878","01256595879","01256595880","01256595881","01256595882","01256595883","01256595884","01256595885","01256595886","01256595887","01256595888","01256595889","01256595890","01256595891","01256595892","01256595893","01256595894","01256595895","01256595896","01256595897","01256595898","01256595899","01256595900","01256595901","01256595902","01256595903","01256595904","01256595905","01256595906","01256595907","01256595908","01256595909","01256595910","01256595911","01256595912","01256595914","01256595915","01256595916","01256595917","01256595918","01256595919","01256595920","01256595921","01256595922","01256595923","01256595924","01256595925","01256595926","01256595927","01256595928","01256595929","01256595930","01256595931","01256595932","01256595933","01256595934","01256595935","01256595936","01256595937","01256595938","01256595939","01256595940","01256595941","01256595942","01256595943","01256595944","01256595945","01256595946","01256595947","01256595948","01256595949","01256595950","01256595951","01256595952","01256595953","01256595954","01256595955","01256595956","01256595957","01256595958","01256595959","01256595960","01256595961","01256595962","01256595963")
	$bri_ddi_array = @("01173745520","01173745521","01173745522","01173745523","01173745524","01173745525","01173745526","01173745527","01173745528","01173745529","01173745530","01173745531","01173745532","01173745533","01173745534","01173745535","01173745536","01173745537","01173745538","01173745539","01173745540","01173745541","01173745542","01173745543","01173745544","01173745545","01173745546","01173745547","01173745548","01173745549","01174504420","01174504421","01174504422","01174504423","01174504424","01174504425","01174504426","01174504427","01174504428","01174504429","01174504430","01174504431","01174504432","01174504433","01174504434","01174504435","01174504436","01174504437","01174504438","01174504439","01174504440","01174504441","01174504442","01174504443","01174504444","01174504445","01174504446","01174504447","01174504448","01174504449","01174722880","01174722881","01174722882","01174722883","01174722884","01174722885","01174722886","01174722887","01174722888","01174722889","01174722890","01174722891","01174722892","01174722893","01174722894","01174722895","01174722896","01174722897","01174722898","01174722899")
	$bou_ddi_array = @("01202110120","01202110121","01202110122","01202110123","01202110124","01202110125","01202110126","01202110127","01202110128","01202110129","01202110130","01202110131","01202110132","01202110133","01202110134","01202110135","01202110136","01202110137","01202110138","01202110139","01202110140","01202110141","01202110142","01202110143","01202110144","01202110145","01202110146","01202110147","01202110148","01202110149","01202110150","01202110151","01202110152","01202110153","01202110154","01202110155","01202110156","01202110157","01202110158","01202110159","01202110160","01202110161","01202110162","01202110163","01202110164","01202110165","01202110166","01202110167","01202110168","01202110169","01202110170","01202110171","01202110172","01202110173","01202110174","01202110175","01202110176","01202110177","01202110178","01202110179","01202110180","01202110181","01202110182","01202110183","01202110184","01202110185","01202110186","01202110187","01202110188","01202110189","01202110190","01202110191","01202110192","01202110193","01202110194","01202110195","01202110196","01202110197","01202110198","01202110199","01202110200","01202110201","01202110202","01202110203","01202110204","01202110205","01202110206","01202110207","01202110208","01202110209","01202110210","01202110211","01202110212","01202110213","01202110214","01202110215","01202110216","01202110217","01202110218","01202110219")
	$sou_ddi_array = @("02382542150","02382542151","02382542152","02382542153","02382542154","02382542155","02382542156","02382542157","02382542158","02382542159","02382542160","02382542161","02382542162","02382542163","02382542164","02382542165","02382542166","02382542167","02382542168","02382542169","02382542170","02382542171","02382542172","02382542173","02382542174","02382542175","02382542176","02382542177","02382542178","02382542179","02382542180","02382542181","02382542182","02382542183","02382542184","02382542185","02382542186","02382542187","02382542188","02382542189","02382542190","02382542191","02382542192","02382542193","02382542194","02382542195","02382542196","02382542197","02382542198","02382542199","02382547190","02382547191","02382547192","02382547193","02382547194","02382547195","02382547196","02382547197","02382547198","02382547199","02382547200","02382547201","02382547202","02382547203","02382547204","02382547205","02382547206","02382547207","02382547208","02382547209","02382547210","02382547211","02382547212","02382547213","02382547214","02382547215","02382547216","02382547217","02382547218","02382547219","02382547220","02382547221","02382547222","02382547223","02382547224","02382547225","02382547226","02382547227","02382547228","02382547229","02382547230","02382547231","02382547232","02382547233","02382547234","02382547235","02382547236","02382547237","02382547238","02382547239","02382547240","02382547241","02382547242","02382547243","02382547244","02382547245","02382547246","02382547247","02382547248","02382547249","02382547250","02382547251","02382547252","02382547253","02382547254","02382547255","02382547256","02382547257","02382547258","02382547259","02382547260","02382547261","02382547262","02382547263","02382547264","02382547265","02382547266","02382547267","02382547268","02382547269","02382547270","02382547271","02382547272","02382547273","02382547274","02382547275","02382547276","02382547277","02382547278","02382547279","02382547280","02382547281","02382547282","02382547283","02382547284","02382547285","02382547286","02382547287","02382547288","02382547289")
	$por_ddi_array = @("02394213325","02394213326","02394213327","02394213328","02394213329","02394213330","02394213331","02394213332","02394213333","02394213334","02394213335","02394213336","02394213337","02394213338","02394213339","02394213340","02394213341","02394213342","02394213343","02394213344","02394213345","02394213346","02394213347","02394213348","02394213349","02394213350","02394213351","02394213352","02394213353","02394213354","02394213355","02394213356","02394213357","02394213358","02394213359","02394213360","02394213361","02394213362","02394213363","02394213364","02394213365","02394213366","02394213367","02394213368","02394213369","02394213370","02394213371","02394213372","02394213373","02394213374","02394213375","02394213376","02394213377","02394213378","02394213379","02394213380","02394213381","02394213382","02394213383","02394213384","02394213385","02394213386","02394213387","02394213388","02394213389","02394213390","02394213391","02394213392","02394213393","02394213394","02394213395","02394213396","02394213397","02394213398","02394213399","02394213400","02394213401","02394213402","02394213403","02394213404","02394213405","02394213406","02394213407","02394213408","02394213409","02394213410","02394213411","02394213412","02394213413","02394213414","02394213415","02394213416","02394213417","02394213418","02394213419","02394213420","02394213421","02394213422","02394213423","02394213424","02394213425","02394213426","02394213427","02394213428","02394213429","02394213430","02394213431","02394213432","02394213433","02394213434","02394213435","02394213436","02394213437","02394213438","02394213439","02394213440","02394213441","02394213442","02394213443","02394213444","02394213445","02394213446","02394213447","02394213448","02394213449","02394213450","02394213451","02394213452","02394213453","02394213454","02394213455","02394213456","02394213457","02394213458","02394213459","02394213460","02394213461","02394213462","02394213463","02394213464","02394213465","02394213466","02394213467","02394213468","02394213469","02394213470","02394213471","02394213472","02394213473","02394213474","02394213475","02394213476","02394213477","02394213478","02394213479","02394213480","02394213481","02394213482","02394213483","02394213484","02394213485","02394213486","02394213487","02394213488","02394213489","02394213490","02394213491","02394213492","02394213493","02394213494","02394213495","02394213496","02394213497","02394213498","02394213499","02394213500","02394213501","02394213502","02394213503","02394213504","02394213505","02394213506","02394213507","02394213508","02394213509","02394213510","02394213511","02394213512","02394213513","02394213514","02394213515","02394213516","02394213517","02394213518","02394213519","02394213520","02394213521","02394213522","02394213523","02394213524","02394213525","02394213526","02394213527","02394213528","02394213529","02394213530","02394213531","02394213532","02394213533","02394213534","02394213535","02394213536","02394213537","02394213538","02394213539","02394213540","02394213541","02394213542","02394213543","02394213544","02394213545","02394213546","02394213547","02394213548","02394213549","02394213550","02394213551","02394213552","02394213553","02394213554","02394213555","02394213556","02394213557","02394213558","02394213559","02394213560","02394213561","02394213562","02394213563","02394213564","02394213565","02394213566","02394213567","02394213568","02394213569","02394213570","02394213571","02394213572","02394213573","02394213574","02394213575","02394213576","02394213577","02394213578","02394213579","02394213580","02394213581","02394213582","02394213583","02394213584","02394213585","02394213586","02394213587","02394213588","02394213589","02394213590","02394213591","02394213592","02394213593","02394213594","02394213595","02394213596","02394213597","02394213598","02394213599","02394213600","02394213601","02394213602","02394213603","02394213604","02394213605","02394213606","02394213607","02394213608","02394213609","02394213610","02394213611","02394213612","02394213613","02394213614","02394213615","02394213616","02394213617","02394213618","02394213619","02394213620","02394213621","02394213622","02394213623","02394213624","02394213625","02394213626","02394213627","02394213628","02394213629","02394213630","02394213631","02394213632","02394213633","02394213634","02394213635","02394213636","02394213637","02394213638","02394213639","02394213640","02394213641","02394213642","02394213643","02394213644","02394213645","02394213646","02394213647","02394213648","02394213649","02394213650","02394213651","02394213652","02394213653","02394213654","02394213655","02394213656","02394213657","02394213658","02394213659","02394213660","02394213661","02394213662","02394213663","02394213664","02394213665","02394213666","02394213667","02394213668")
	$man_ddi_array = @("01614646050","01614646051","01614646052","01614646053","01614646054","01614646055","01614646056","01614646057","01614646058","01614646059","01614646070","01614646071","01614646072","01614646073","01614646074","01614646075","01614646076","01614646077","01614646078","01614646079","01614649260","01614649261","01614649262","01614649263","01614649264","01614649265","01614649266","01614649267","01614649268","01614649269","01614708500","01614708501","01614708502","01614708503","01614708504","01614708505","01614708506","01614708507","01614708508","01614708509","01614708510","01614708511","01614708512","01614708513","01614708514","01614708515","01614708516","01614708517","01614708518","01614708519","01614708520","01614708521","01614708522","01614708523","01614708524","01614708525","01614708526","01614708527","01614708528","01614708529","01614708530","01614708531","01614708532","01614708533","01614708534","01614708535","01614708536","01614708537","01614708538","01614708539","01614708540","01614708541","01614708542","01614708543","01614708544","01614708545","01614708546","01614708547","01614708548","01614708549","01614708550","01614708551","01614708552","01614708553","01614708554","01614708555","01614708556","01614708557","01614708558","01614708559","01614708560","01614708561","01614708562","01614708563","01614708564","01614708565","01614708566","01614708567","01614708568","01614708569","01614708570","01614708571","01614708572","01614708573","01614708574","01614708575","01614708576","01614708577","01614708578","01614708579","01614708580","01614708581","01614708582","01614708583","01614708584","01614708585","01614708586","01614708587","01614708588","01614708589","01614708590","01614708591","01614708592","01614708593","01614708594","01614708595","01614708596","01614708597","01614708598","01614708599","01614708600","01614708601","01614708602","01614708603","01614708604","01614708605","01614708606","01614708607","01614708608","01614708609","01614708610","01614708611","01614708612","01614708613","01614708614","01614708615","01614708616","01614708617","01614708618","01614708619","01614708620","01614708621","01614708622","01614708623","01614708624","01614708625","01614708626","01614708627","01614708628","01614708629","01614708630","01614708631","01614708632","01614708633","01614708634","01614708635","01614708636","01614708637","01614708638","01614708639","01614708640","01614708641","01614708642","01614708643","01614708644","01614708645","01614708646","01614708647","01614708648","01614708649","01615325120","01615325121","01615325122","01615325123","01615325124","01615325125","01615325126","01615325127","01615325128","01615325129","01615430450","01615430451","01615430452","01615430453","01615430454","01615430455","01615430456","01615430457","01615430458","01615430459","01615430460","01615430461","01615430462","01615430463","01615430464","01615430465","01615430466","01615430467","01615430468","01615430469","01615430470","01615430471","01615430472","01615430473","01615430474","01615430475","01615430476","01615430477","01615430478","01615430479","01615430480","01615430481","01615430482","01615430483","01615430484","01615430485","01615430486","01615430487","01615430488","01615430489","01615430490","01615430491","01615430492","01615430493","01615430494","01615430495","01615430496","01615430497","01615430498","01615430499","01617130360","01617130361","01617130362","01617130363","01617130364","01617130365","01617130366","01617130367","01617130368","01617130369","01617130370","01617130371","01617130372","01617130373","01617130374","01617130375","01617130376","01617130377","01617130378","01617130379","01617130410","01617130411","01617130412","01617130413","01617130414","01617130415","01617130416","01617130417","01617130418","01617130419","01617130420","01617130421","01617130422","01617130423","01617130424","01617130425","01617130426","01617130427","01617130428","01617130429","01617132285","01617132286","01617132287","01617132288","01617132289","01617132290","01617132291","01617132292","01617132293","01617132294","01618260410","01618260411","01618260412","01618260413","01618260414","01618260415","01618260416","01618260417","01618260418","01618260419")
	$che_ddi_array = @("01244268010","01244268011","01244268012","01244268013","01244268014","01244268015","01244268016","01244268017","01244268018","01244268019","01244268020","01244268021","01244268022","01244268023","01244268024","01244268025","01244268026","01244268027","01244268028","01244268029","01244268030","01244268031","01244268032","01244268033","01244268034","01244268035","01244268036","01244268037","01244268038","01244268039","01244268040","01244268041","01244268042","01244268043","01244268044","01244268045","01244268046","01244268047","01244268048","01244268049","01244268050","01244268051","01244268052","01244268053","01244268054","01244268055","01244268056","01244268057","01244268058","01244268059","01244268060","01244268061","01244268062","01244268063","01244268064","01244268065","01244268066","01244268067","01244268068")

	if ($office -match "Basingstoke"){
		$ddi_array = $bas_ddi_array
	}
	elseif ($office -match "Bristol"){
		$ddi_array = $bri_ddi_array
		
	}
	elseif ($office -match "Bournemouth"){
		$ddi_array = $bou_ddi_array
	}
	elseif ($office -match "Southampton"){
		$ddi_array = $sou_ddi_array
	}
	elseif ($office -match "Portsmouth"){
		$ddi_array = $por_ddi_array
	}
	elseif ($office -match "Manchester"){
		$ddi_array = $man_ddi_array
	}
	elseif ($office -match "Chester"){
		$ddi_array = $che_ddi_array
	}

	#Check if the user is an advised user and set their domain, and ext and DDI numbers accordingly
	if($dept -eq "Advised") {
		$emailDomain = "@reassured-advice.co.uk"
		$phonenumber = "N/A"
		$IPPhone = "N/A"
		$ext = "N/A"
	}
	else {
		$emailDomain = "@reassured.co.uk"
		$phonenumberloop = $True
		while ($phonenumberloop -eq $True){
			$random_phone_number = $ddi_array | get-random
			$existingUser = Get-ADUser -filter {officephone -eq $random_phone_number} -Properties officephone
			if ($existingUser) {
				$phonenumberloop = $True
				write-host "$random_phone_number is already in use"
			} else {
				$phonenumberloop = $False
				$phonenumber = $random_phone_number
				write-host "DDI $phonenumber is available."
			}
		}
	
			
		
		$ext_loop = $True #create a loop - the script will select a random extension and check if any other users have it, if not it will set that as the ext number and break the loop
		while ($ext_loop -eq $True){
			$IPnumber = get-random -minimum 2000 -maximum 3999
			$existingUser = Get-ADUser -Filter {ipPhone -eq $IPnumber} -Properties ipPhone

			if ($existingUser) {
				$ext_loop = $True
			} else {
				$ext_loop = $False
				$IPPhone = $IPnumber
				Write-Host "Extension $IPPhone is available."
			}
		}
		$ext = "$IPPhone" + "@uc.re-assured.net" #put the extension into the desired format to be read by the ACM.
		}
	}
	$Email = $($Login + $emailDomain)

	#create the user and set the specfied parameters, based on job title / department
	write-host "Creating User..."

	New-ADUser -Name $name -SamAccountName $login -UserPrincipalName $Email -AccountPassword $pwd -Enabled $false -ChangePasswordAtLogon $true -company "Reassured" -department $dept -emailaddress $Email -Description $description -givenname $fname -surname $lname -displayname $name -title $jobtitle -office $office -officephone $phonenumber -path $oupath

	#Add the user's extension in a format that can be synced into Avaya Manager
	Set-ADUser -Identity $login -Add @{'ipPhone'=$ext}

	#Force the user to change their password at logon
	Set-ADUser -Identity $login -ChangePasswordAtLogon $True

	write-host "Created User. Adding Group Memberships..."

	#Wait 5 seconds before adding groups, to allow the user to show up in AD first
	Start-Sleep -Seconds 5

	#Check that the user can be added into groups
	ForEach ($Group in $Groups) {
		try {
			Add-ADPrincipalGroupMembership $login -MemberOf $Group
		} catch {
			Write-Host "Failed to add $login to $Group"
		}
	}

	#Add user into groups
	ForEach ($Group in $Groups) {
		Add-ADPrincipalGroupMembership $login -MemberOf $Group
	}

	#Add to extra groups based on location
	if($office -eq "Bristol") {
		Add-ADPrincipalGroupMembership $login -MemberOf "Bristol sales staff-11163693885"
	}
	if($office -eq "Bournemouth") {
		Add-ADPrincipalGroupMembership $login -MemberOf "Bournemouth Sales-1952039434"
	}
	if($office -eq "Southampton") {
		Add-ADPrincipalGroupMembership $login -MemberOf "Southampton Sales"
	}
	if($office -eq "Portsmouth") {
		Add-ADPrincipalGroupMembership $login -MemberOf "Portsmouth Staff"
	}
	if ($office -eq "Portsmouth" -and $dept -eq "Sales") {
		Add-ADPrincipalGroupMembership $login -MemberOf "Portsmouth Sales"
	}
	if ($office -eq "Basingstoke") {
		Add-ADPrincipalGroupMembership $login -MemberOf "Basingstoke Staff"
	}
	if ($office -eq "Basingstoke" -and $dept -eq "Sales") {
		Add-ADPrincipalGroupMembership $login -MemberOf @("Corporate Sales Basingstoke-11739319218","Basingstoke Sales")
	}
	if ($office -eq "Basingstoke" -and $dept -in @("Quality Assurance", "IT", "Team People", "Compliance")) {
		Add-ADPrincipalGroupMembership $login -MemberOf "Basingstoke Back Office"
	}
	Write-host "Groups have been added."
	Write-host "Hold the line please, caller..."

	#Wait 5 seconds before creating the mailbox, to allow the user to show up in AD first
	Start-Sleep -Seconds 5
	#Create the user's mailbox, and add proxy adresses (Credit to Rob Browning for this part.)

	Add-PSSnapin *RecipientManagement
	if($dept -eq "Advised") {
		Write-Output "Creating mailbox..."
					Enable-RemoteMailbox -Identity $Email -RemoteRoutingAddress "$login@reassured.mail.onmicrosoft.com" -PrimarySmtpAddress ($login + "@reassured-advice.co.uk") -Alias $login
		

				Write-Output 'Adding proxy addresses...'
				Set-ADUser $login -Add @{ ProxyAddresses = "SMTP:$login@reassured-advice.co.uk" }
				Set-ADUser $login -Add @{ ProxyAddresses = "smtp:$login@reassured.co.uk" }
				Set-ADUser $login -Add @{ ProxyAddresses = "smtp:$login@reassured.mail.onmicrosoft.com" }
				Set-ADUser $login -Add @{ ProxyAddresses = "smtp:$login@reassured.onmicrosoft.com" }
				Set-ADUser $login -Add @{ ProxyAddresses = "smtp:$login@re-assured.net" }
				Set-ADUser $login -Add @{ ProxyAddresses = "smtp:$login@re-assured.co.uk" }
	} Else {
				Write-Output "Creating mailbox..."
				
				Enable-RemoteMailbox -Identity $Email -RemoteRoutingAddress "$login@reassured.mail.onmicrosoft.com" -PrimarySmtpAddress ($Login +"@reassured.co.uk") -Alias $login
		

				Write-Output 'Adding proxy addresses...'
				Set-ADUser $login -Add @{ ProxyAddresses = "SMTP:$login@reassured.co.uk" }
				Set-ADUser $login -Add @{ ProxyAddresses = "smtp:$login@reassured.mail.onmicrosoft.com" }
				Set-ADUser $login -Add @{ ProxyAddresses = "smtp:$login@reassured.onmicrosoft.com" }
				Set-ADUser $login -Add @{ ProxyAddresses = "smtp:$login@re-assured.net" }
				Set-ADUser $login -Add @{ ProxyAddresses = "smtp:$login@re-assured.co.uk" }
	}
	write-host "Mailbox created."
	$deskphone_Password = get-random -minimum 100000000 -maximum 999999999 
	cls
	write-host "User created:`nName: $name `nEmail: $Email `nExtension number: $IPPhone`nDDI: $phonenumber`nMake sure you sync ACM and reserve the DDI in call routing!`nHere's a deskphone password you could use: $deskphone_Password"
	read-host "Hit enter to go back to the menu"
		}
	}


function change_name{ #define the function for changing a users upn
	#obtain the users current name, and the new name
	$old_user = read-host "Please enter the user's current login ie Joe.Bloggs"
	$new_first_name = Read-Host "Please enter the first name of the user's new name"
	$new_last_name = Read-Host "Please enter the last name of the user's new name"
	$new_name = $($new_first_name + " " + $new_last_name)
	$new_login = $($new_first_name + "." + $new_last_name)

	#Check if the user is an advised user and set their domain accordingly
	$department = get-ADuser -identity $old_user -properties "Department"
	if($department -match "Advised") {
		$email_domain = "@reassured-advice.co.uk"
	} else {
		$email_domain = "@reassured.co.uk"
	}

	#set the old and new emails for the user
	$old_email = $($old_user + $email_domain)
	$new_email = $($new_login + $email_domain)

	#set the user's new account name, login and display name

	set-aduser -identity $old_user -SamAccountName $new_login -userprincipalname $new_email -emailaddress $new_email -givenname $new_first_name -surname $new_last_name -displayname $new_name

	#pause the script for 5 seconds to allow AD to catch up
	write-host "Hold the line please, caller..."
	start-sleep -seconds 5 

	# Get the updated user object
	$updated_user = Get-ADUser -Identity $new_login

	# Rename the user object
	Rename-ADObject -Identity $updated_user.DistinguishedName -NewName $new_name

	#add the snap in to allow editing of the user's mailbox
	Add-PSSnapin *RecipientManagement

	#edit the user's mailbox and smtp addresses, leaving the old addresses as aliases.
	if($advised -eq "y") {
		Write-Output "Amending mailbox..."
					set-RemoteMailbox -Identity $old_email -RemoteRoutingAddress "$new_login@reassured.mail.onmicrosoft.com" -PrimarySmtpAddress ($new_login+"@reassured-advice.co.uk") -Alias $new_login
	

				Write-Output 'Adding proxy addresses...'
				Set-ADUser $new_login -Add @{ ProxyAddresses = "smtp:$new_login@reassured.co.uk" }
				Set-ADUser $new_login -Add @{ ProxyAddresses = "smtp:$new_login@reassured.mail.onmicrosoft.com" }
				Set-ADUser $new_login -Add @{ ProxyAddresses = "smtp:$new_login@reassured.onmicrosoft.com" }
				Set-ADUser $new_login -Add @{ ProxyAddresses = "smtp:$new_login@re-assured.net" }
				Set-ADUser $new_login -Add @{ ProxyAddresses = "smtp:$new_login@re-assured.co.uk" }
				Set-ADUser $new_login -Remove @{ ProxyAddresses = "SMTP:$old_user@reassured-advice.co.uk" }
				Set-ADUser $new_login -Add @{ ProxyAddresses = "SMTP:$new_login@reassured-advice.co.uk" }
	} Else {
				Write-Output "Amending mailbox..."
			
				set-RemoteMailbox -Identity $old_email -RemoteRoutingAddress "$new_login@reassured.mail.onmicrosoft.com" -PrimarySmtpAddress ($new_login+"@reassured.co.uk") -Alias $new_login 
	

				Write-Output 'Adding proxy addresses...'
				Set-ADUser $new_login -Add @{ ProxyAddresses = "smtp:$new_login@reassured.mail.onmicrosoft.com" }
				Set-ADUser $new_login -Add @{ ProxyAddresses = "smtp:$new_login@reassured.onmicrosoft.com" }
				Set-ADUser $new_login -Add @{ ProxyAddresses = "smtp:$new_login@re-assured.net" }
				Set-ADUser $new_login -Add @{ ProxyAddresses = "smtp:$new_login@re-assured.co.uk" }
				Set-ADUser $new_login -Remove @{ ProxyAddresses = "SMTP:$old_user@reassured.co.uk" }
				Set-ADUser $new_login -Add @{ ProxyAddresses = "SMTP:$new_login@reassured.co.uk" }
	}
	
	write-host "Mailbox amended."
	start-sleep -Seconds 3 #short sleep so the user can see that the script completed.
}

function user_editor{ #define a function that gives users a list of options to choose from
	cls #clear any previous output
	print_title #print the title art
	write-host "Welcome to the AD User Editor!" #welcome the user
	$action = read-host "What would you like to do?`n`nTo process a new starter, press 1.`n`nTo process a leaver, press 2.`n`nTo change a user's name, press 3.`n`nTo exit, press 4.`n`nChoose" #provide user with list of available functions, and an exit option.
	if ($action -match "1"){
		new_starter #1 starts the new starter creation function
	}
	elseif ($action -match "2"){
		leaver #2 starts the leaver function
	}
	elseif ($action -match "3"){
		change_name #3 starts the upn change function
	}
	elseif ($action -match "4"){
		exit #4 exits the script
	}
	user_editor #calls the user editor function once complete, to loop back to the beginning.
}
user_editor #call the function for user editing